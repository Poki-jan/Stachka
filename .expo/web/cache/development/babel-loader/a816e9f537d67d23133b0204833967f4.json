{"ast":null,"code":"import { getHeaderTitle, Header, HeaderBackButton, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\nexport default function NativeStackView(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n\n    var isFocused = state.index === i;\n    var canGoBack = i !== 0;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nexDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n        options = _descriptors$route$ke.options,\n        navigation = _descriptors$route$ke.navigation,\n        render = _descriptors$route$ke.render;\n    var header = options.header,\n        headerShown = options.headerShown,\n        headerTintColor = options.headerTintColor,\n        headerBackImageSource = options.headerBackImageSource,\n        headerLeft = options.headerLeft,\n        headerRight = options.headerRight,\n        headerTitle = options.headerTitle,\n        headerTitleAlign = options.headerTitleAlign,\n        headerTitleStyle = options.headerTitleStyle,\n        headerStyle = options.headerStyle,\n        headerShadowVisible = options.headerShadowVisible,\n        headerTransparent = options.headerTransparent,\n        headerBackground = options.headerBackground,\n        headerBackTitle = options.headerBackTitle,\n        presentation = options.presentation,\n        contentStyle = options.contentStyle;\n    var nextPresentation = nexDescriptor === null || nexDescriptor === void 0 ? void 0 : nexDescriptor.options.presentation;\n    return React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: previousDescriptor ? {\n          title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n        } : undefined,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n              tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render()));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","HeaderBackButton","SafeAreaProviderCompat","Screen","React","TRANSPARENT_PRESENTATIONS","NativeStackView","state","descriptors","View","style","styles","container","routes","map","route","i","isFocused","index","canGoBack","previousKey","_state$routes","key","nextKey","_state$routes2","previousDescriptor","undefined","nexDescriptor","options","navigation","render","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","headerBackground","headerBackTitle","presentation","contentStyle","nextPresentation","focused","back","title","name","tintColor","label","backImage","Image","source","onPress","goBack","children","StyleSheet","absoluteFill","display","includes","backgroundColor","contentContainer","create","flex","height","width","margin","resizeMode"],"sources":["NativeStackView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nexDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackground,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nexDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerTransparent={headerTransparent}\n                    headerShadowVisible={headerShadowVisible}\n                    headerBackground={headerBackground}\n                    headerStyle={headerStyle}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}