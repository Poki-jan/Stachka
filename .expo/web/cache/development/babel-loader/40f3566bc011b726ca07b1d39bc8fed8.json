{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_WIDTH = _Dimensions$get.width,\n    SCREEN_HEIGHT = _Dimensions$get.height;\n\nvar scale = SCREEN_WIDTH / 320;\nexport function normalize(size) {\n  var newSize = size * scale;\n\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize));\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2;\n  }\n}","map":{"version":3,"sources":["/home/larintexterra/App/Stachka/functions/text_normalize.tsx"],"names":["Dimensions","get","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","scale","normalize","size","newSize","Platform","OS","Math","round","PixelRatio","roundToNearestPixel"],"mappings":";;;;AAIA,sBAGMA,UAAU,CAACC,GAAX,CAAe,QAAf,CAHN;AAAA,IACWC,YADX,mBACIC,KADJ;AAAA,IAEYC,aAFZ,mBAEIC,MAFJ;;AAME,IAAMC,KAAK,GAAGJ,YAAY,GAAG,GAA7B;AAEA,OAAO,SAASK,SAAT,CAAmBC,IAAnB,EAA6B;AAClC,MAAMC,OAAO,GAAGD,IAAI,GAAGF,KAAvB;;AACA,MAAII,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAOC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACC,mBAAX,CAA+BN,OAA/B,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAOG,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACC,mBAAX,CAA+BN,OAA/B,CAAX,IAAsD,CAA7D;AACD;AACF","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, Image, View, TouchableOpacity, TouchableHighlight, Dimensions, Platform, PixelRatio} from 'react-native';\r\nimport { createNavigationContainerRef} from '@react-navigation/native';\r\n\r\nconst {\r\n    width: SCREEN_WIDTH,\r\n    height: SCREEN_HEIGHT,\r\n  } = Dimensions.get('window');\r\n  \r\n  // based on iphone 5s's scale\r\n  const scale = SCREEN_WIDTH / 320;\r\n  \r\n  export function normalize(size:any) {\r\n    const newSize = size * scale \r\n    if (Platform.OS === 'ios') {\r\n      return Math.round(PixelRatio.roundToNearestPixel(newSize))\r\n    } else {\r\n      return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}