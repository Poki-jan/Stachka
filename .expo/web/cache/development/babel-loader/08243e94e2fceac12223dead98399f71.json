{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Delivery } from \"./screens/delivery/delivery.js\";\nimport { Rent } from \"./screens/rent/rent.js\";\nimport { Poster } from \"./screens/poster/poster.js\";\nimport { OzHub } from \"./screens/ozhub.js\";\nimport { SvgProfile } from \"./svg/svgProfile\";\nimport { SvgPoster } from \"./svg/svgPoster\";\nimport { SvgRent } from \"./svg/svgRent\";\nimport { SvgDelivery } from \"./svg/svgDelivery.js\";\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { DeliveryItem } from \"./screens/delivery/deliveryItem\";\nimport { navigationRef } from \"./navigate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DeliveryStack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction DeliveryStackNav(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  React.useLayoutEffect(function () {\n    var routeName = getFocusedRouteNameFromRoute(route);\n\n    if (routeName == \"DeliveryItem\") {\n      navigation.setOptions({\n        tabBarStyle: {\n          display: 'none'\n        }\n      });\n    } else {\n      navigation.setOptions({\n        tabBarStyle: {\n          display: 'flex',\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          left: \"5%\",\n          width: \"90%\",\n          height: 71,\n          bottom: 26,\n          backgroundColor: 'white',\n          borderRadius: 16,\n          shadowRadius: 10,\n          shadowColor: 'black',\n          shadowOpacity: 0.35,\n          shadowOffset: {\n            width: 0,\n            height: 6\n          },\n          elevation: 8\n        }\n      });\n    }\n  }, [navigation, route]);\n  return _jsxs(DeliveryStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarStyle: {\n        position: 'absolute',\n        display: 'flex',\n        left: \"5%\",\n        width: \"90%\",\n        height: 61,\n        bottom: 16,\n        borderTopWidth: 10,\n        paddingTop: 10\n      }\n    },\n    children: [_jsx(DeliveryStack.Screen, {\n      name: \"Delivery\",\n      component: Delivery\n    }), _jsx(DeliveryStack.Screen, {\n      name: \"DeliveryItem\",\n      component: DeliveryItem\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    ref: navigationRef,\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: '#8611FF',\n        tabBarInactiveTintColor: '#1E1E1E',\n        tabBarStyle: {\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          left: \"5%\",\n          width: \"90%\",\n          height: 71,\n          bottom: 26,\n          backgroundColor: 'white',\n          borderRadius: 16,\n          shadowRadius: 10,\n          shadowColor: 'black',\n          shadowOpacity: 0.35,\n          shadowOffset: {\n            width: 0,\n            height: 6\n          },\n          elevation: 8\n        },\n        tabBarItemStyle: {\n          height: 55,\n          borderRadius: 16,\n          marginTop: 8,\n          marginBottom: 8\n        },\n        tabBarIconStyle: {\n          marginTop: 'auto',\n          marginBottom: 'auto'\n        },\n        tabBarActiveBackgroundColor: '#F8F8F8',\n        tabBarLabelStyle: {\n          fontSize: 8,\n          fontWeight: 'bold',\n          marginTop: 'auto',\n          marginBottom: 6\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\",\n        options: {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon() {\n            return _jsx(SvgDelivery, {});\n          }\n        },\n        component: DeliveryStackNav\n      }), _jsx(Tab.Screen, {\n        name: \"\\u0410\\u0440\\u0435\\u043D\\u0434\\u0430\",\n        options: {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon() {\n            return _jsx(SvgRent, {});\n          }\n        },\n        component: Rent\n      }), _jsx(Tab.Screen, {\n        name: \"\\u0410\\u0444\\u0438\\u0448\\u0430\",\n        options: {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon() {\n            return _jsx(SvgPoster, {});\n          }\n        },\n        component: Poster\n      }), _jsx(Tab.Screen, {\n        name: \"\\u041C\\u0435\\u043D\\u044E\",\n        options: {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon() {\n            return _jsx(SvgProfile, {});\n          }\n        },\n        component: OzHub\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  navbar: {\n    position: 'absolute',\n    bottom: 30,\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"sources":["/home/larintexterra/App/Stachka/App.jsx"],"names":["React","createBottomTabNavigator","NavigationContainer","Delivery","Rent","Poster","OzHub","SvgProfile","SvgPoster","SvgRent","SvgDelivery","getFocusedRouteNameFromRoute","createNativeStackNavigator","DeliveryItem","navigationRef","DeliveryStack","Tab","DeliveryStackNav","navigation","route","useLayoutEffect","routeName","setOptions","tabBarStyle","display","position","alignItems","left","width","height","bottom","backgroundColor","borderRadius","shadowRadius","shadowColor","shadowOpacity","shadowOffset","elevation","headerShown","borderTopWidth","paddingTop","App","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarItemStyle","marginTop","marginBottom","tabBarIconStyle","tabBarActiveBackgroundColor","tabBarLabelStyle","fontSize","fontWeight","tabBarIcon","styles","StyleSheet","create","navbar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer} from '@react-navigation/native';\nimport { Delivery } from './screens/delivery/delivery.js';\nimport { Rent } from './screens/rent/rent.js';\nimport { Poster } from './screens/poster/poster.js';\nimport { OzHub } from './screens/ozhub.js';\nimport { SvgProfile } from './svg/svgProfile';\nimport { SvgPoster } from './svg/svgPoster';\nimport { SvgRent } from './svg/svgRent';\nimport { SvgDelivery } from './svg/svgDelivery.js';\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { DeliveryItem } from './screens/delivery/deliveryItem';\nimport { navigationRef } from './navigate';\n\nconst DeliveryStack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction DeliveryStackNav({ navigation, route }) {\n  React.useLayoutEffect(() => {\n    const routeName = getFocusedRouteNameFromRoute(route);\n    if (routeName == \"DeliveryItem\"){\n      navigation.setOptions({tabBarStyle: {display: 'none'}});\n    }else {\n      navigation.setOptions({tabBarStyle: {display: 'flex',  position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          left: \"5%\",\n          width: \"90%\",\n          height: 71,\n          bottom: 26,\n          backgroundColor: 'white',\n          borderRadius: 16,\n          shadowRadius: 10,\n          shadowColor: 'black',\n          shadowOpacity: 0.35,\n          shadowOffset: { width: 0, height: 6},\n          elevation: 8}});\n    }\n}, [navigation, route]);\n  return(\n      <DeliveryStack.Navigator screenOptions={{\n        headerShown: false,\n        tabBarStyle: {\n          position: 'absolute',\n          display: 'flex',\n          left: \"5%\",\n          width: \"90%\",\n          height: 61,\n          bottom: 16,\n          borderTopWidth: 10,\n          paddingTop: 10,\n        }}}>\n        <DeliveryStack.Screen name=\"Delivery\" component={Delivery}></DeliveryStack.Screen>\n        <DeliveryStack.Screen name=\"DeliveryItem\" component={DeliveryItem}></DeliveryStack.Screen>\n      </DeliveryStack.Navigator>\n  )\n}\n\nexport default function App() {\n\n  return (\n    \n    <NavigationContainer ref={navigationRef}>\n\n      <Tab.Navigator screenOptions={{\n        tabBarActiveTintColor: '#8611FF',\n        tabBarInactiveTintColor: '#1E1E1E',\n        \n        tabBarStyle: {\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          left: \"5%\",\n          width: \"90%\",\n          height: 71,\n          bottom: 26,\n          backgroundColor: 'white',\n          borderRadius: 16,\n          shadowRadius: 10,\n          shadowColor: 'black',\n          shadowOpacity: 0.35,\n          shadowOffset: { width: 0, height: 6},\n          elevation: 8\n        },\n        tabBarItemStyle: {\n          height: 55,\n          borderRadius: 16,\n          marginTop: 8,\n          marginBottom: 8\n        },\n        tabBarIconStyle: {\n          marginTop: 'auto',\n          marginBottom: 'auto'\n        },\n        tabBarActiveBackgroundColor: '#F8F8F8',\n        tabBarLabelStyle: {\n          fontSize: 8,\n          fontWeight: 'bold',\n          marginTop: 'auto',\n          marginBottom: 6\n        }\n      }}>\n         <Tab.Screen name=\"Доставка\" options={{headerShown: false, tabBarIcon: () => <SvgDelivery/>}} component={DeliveryStackNav} />\n        <Tab.Screen name=\"Аренда\" options={{headerShown: false, tabBarIcon: () => <SvgRent/>}} component={Rent} />\n        <Tab.Screen name=\"Афиша\" options={{headerShown: false, tabBarIcon: () => <SvgPoster/>}} component={Poster}/>\n       \n        <Tab.Screen name=\"Меню\" options={{headerShown: false, tabBarIcon: () => <SvgProfile />}} component={OzHub} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({ \n  navbar: {\n    position: 'absolute',\n    bottom: 30,\n    backgroundColor: 'red'\n  }\n})"]},"metadata":{},"sourceType":"module"}