{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { normalize } from \"../functions/text_normalize\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Header = function Header(props) {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: {\n        uri: props.image\n      },\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsx(LinearGradient, {\n        colors: ['rgba(255,255,255,1)', 'transparent'],\n        style: styles.background,\n        start: {\n          x: -0.2,\n          y: 0.66\n        },\n        end: {\n          x: -0.1,\n          y: -0.1\n        }\n      }), _jsx(View, {\n        style: {\n          display: 'flex',\n          flexDirection: \"row\"\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: props.text\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: 311\n  },\n  background: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: 311\n  },\n  image: {\n    width: \"100%\",\n    height: \"97%\"\n  },\n  text: {\n    paddingTop: 220,\n    paddingLeft: 14,\n    fontSize: normalize(46),\n    fontWeight: \"bold\"\n  },\n  trash: {\n    paddingTop: 290,\n    paddingLeft: 13,\n    fontSize: 16,\n    width: \"35%\"\n  }\n});","map":{"version":3,"sources":["/home/larintexterra/App/Stachka/templates/header.jsx"],"names":["React","LinearGradient","normalize","Header","props","styles","container","uri","image","background","x","y","display","flexDirection","text","StyleSheet","create","flex","height","position","left","right","top","width","paddingTop","paddingLeft","fontSize","fontWeight","trash"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT;;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAC/B,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,MAAC,eAAD;AAAiB,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEH,KAAK,CAACI;AAAZ,OAAzB;AAA6C,MAAA,UAAU,EAAC,OAAxD;AAAgE,MAAA,KAAK,EAAEH,MAAM,CAACG,KAA9E;AAAA,iBACE,KAAC,cAAD;AAEE,QAAA,MAAM,EAAE,CAAC,qBAAD,EAAwB,aAAxB,CAFV;AAGE,QAAA,KAAK,EAAEH,MAAM,CAACI,UAHhB;AAG4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,CAAC,EAAE,CAAC,GAAN;AAAWC,UAAAA,CAAC,EAAE;AAAd,SAHnC;AAGwD,QAAA,GAAG,EAAE;AAACD,UAAAA,CAAC,EAAE,CAAC,GAAL;AAAUC,UAAAA,CAAC,EAAE,CAAC;AAAd;AAH7D,QADF,EAKI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAC;AAAjC,SAAb;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAER,MAAM,CAACS,IAApB;AAAA,oBAA2BV,KAAK,CAACU;AAAjC;AADF,QALJ;AAAA;AADF,IADF;AAcD,CAfM;AAiBP,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EACT;AACEW,IAAAA,IAAI,EAAE,CADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAF+B;AAM/BT,EAAAA,UAAU,EACV;AACEU,IAAAA,QAAQ,EAAE,UADZ;AAEEC,IAAAA,IAAI,EAAE,CAFR;AAGEC,IAAAA,KAAK,EAAE,CAHT;AAIEC,IAAAA,GAAG,EAAE,CAJP;AAKEJ,IAAAA,MAAM,EAAE;AALV,GAP+B;AAc/BV,EAAAA,KAAK,EACL;AACEe,IAAAA,KAAK,EAAC,MADR;AAEEL,IAAAA,MAAM,EAAC;AAFT,GAf+B;AAmB/BJ,EAAAA,IAAI,EACJ;AACEU,IAAAA,UAAU,EAAE,GADd;AAEEC,IAAAA,WAAW,EAAE,EAFf;AAGEC,IAAAA,QAAQ,EAAExB,SAAS,CAAC,EAAD,CAHrB;AAIEyB,IAAAA,UAAU,EAAE;AAJd,GApB+B;AA0B/BC,EAAAA,KAAK,EACL;AACEJ,IAAAA,UAAU,EAAC,GADb;AAEEC,IAAAA,WAAW,EAAC,EAFd;AAGEC,IAAAA,QAAQ,EAAC,EAHX;AAIEH,IAAAA,KAAK,EAAC;AAJR;AA3B+B,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View, Text, ImageBackground } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { normalize } from '../functions/text_normalize'; \r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={{uri: props.image}} resizeMode=\"cover\" style={styles.image}>\r\n        <LinearGradient \r\n          // Background Linear Gradient\r\n          colors={['rgba(255,255,255,1)', 'transparent']}\r\n          style={styles.background} start={{ x: -0.2, y: 0.66}} end={{x: -0.1, y: -0.1}}/>\r\n          <View style={{ display: 'flex', flexDirection:\"row\"}}>\r\n            <Text style={styles.text}>{props.text}</Text>\r\n            {/* <Text style={styles.trash}>{props.trash}</Text> */}\r\n          </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: \r\n  {\r\n    flex: 1,\r\n    height: 311,\r\n  },\r\n  background: \r\n  {\r\n    position: 'absolute', \r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    height: 311,\r\n  },\r\n  image: \r\n  {\r\n    width:\"100%\",\r\n    height:\"97%\",\r\n  },\r\n  text: \r\n  {\r\n    paddingTop: 220,\r\n    paddingLeft: 14,\r\n    fontSize: normalize(46),\r\n    fontWeight: \"bold\"\r\n  },\r\n  trash: \r\n  {\r\n    paddingTop:290,\r\n    paddingLeft:13,\r\n    fontSize:16,\r\n    width:\"35%\",\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}